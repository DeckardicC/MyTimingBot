import telebot
from telebot import types
import datetime
import re
import os

API_TOKEN = 'token'
bot = telebot.TeleBot(API_TOKEN)

user_data = {}


def add_minutes(start_time_str, minutes):
    start_time = datetime.datetime.strptime(start_time_str, "%H:%M")
    new_time = start_time + datetime.timedelta(minutes=minutes)
    return new_time.strftime("%H:%M")


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∞–π–º–∏–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def generate_timing(user_data):
    start_time = user_data['time']
    place = user_data['place']
    hall = user_data['hall']
    timing = user_data['timing']
    lead_program = user_data.get('program', '')
    show = user_data.get('show', '')
    game = user_data.get('game', '')
    food = user_data['food']

    timing_text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –≠—Ç–æ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä ¬´{place}¬ª üòä.\n"
    timing_text += f"–ü—Ä–∏—Ö–æ–¥–∏–º –±–µ–∑ –æ–ø–æ–∑–¥–∞–Ω–∏–π –º–∏–Ω—É—Ç –∑–∞ 10-15 –¥–æ –Ω–∞—á–∞–ª–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –í {start_time} –Ω–∞—á–Ω–µ—Ç—Å—è –≤–∞—à–µ –≤—Ä–µ–º—è! –ö—Ç–æ –æ–ø–æ–∑–¥–∞–µ—Ç –º–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n\n"

    if food == "–ï–¥–∞ –≤ –Ω–∞—á–∞–ª–µ":
        timing_text += f"{start_time} - {add_minutes(start_time, 15)} –ö—É—à–∞–µ–º –≤ –±–∞–Ω–∫–µ—Ç–Ω–æ–º –∑–∞–ª–µ üçï\n"
        start_time = add_minutes(start_time, 15)

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –ë–æ–ª—å—à–æ–≥–æ –ó–∞–ª–∞
    if hall == "–ë–æ–ª—å—à–æ–π –∑–∞–ª":
        if timing == "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ë–ó":
            if place == "–ö—Ä–µ–π–∑–∏ –•–∞—É—Å":
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} 8 –∫–≤–µ—Å—Ç-–∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ üëæ\n"
                start_time = add_minutes(start_time, 45)
            else:
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ò–≥—Ä–∞ –Ω–∞ –∞—Ä–µ–Ω–µ: {game} üëΩ\n"
                start_time = add_minutes(start_time, 45)
            if food == "–ï–¥–∞ –ø–æ—Å–ª–µ –∏–≥—Ä—ã":
                timing_text += f"{start_time} - {add_minutes(start_time, 15)} –ö—É—à–∞–µ–º –≤ –±–∞–Ω–∫–µ—Ç–Ω–æ–º –∑–∞–ª–µ üçï\n"
                start_time = add_minutes(start_time, 15)
            timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å –≤–µ–¥—É—â–∏–º: {lead_program} üí•\n"
            start_time = add_minutes(start_time, 45)
            timing_text += f"{start_time} - {add_minutes(start_time, 20)} –ö—É—à–∞–µ–º —Ç–æ—Ä—Ç–∏–∫ üéÇ\n"
            start_time = add_minutes(start_time, 20)

        elif timing == "–°—Ç–∞–Ω–¥–∞—Ä—Ç –ë–ó":
            if place == "–ö—Ä–µ–π–∑–∏ –•–∞—É—Å":
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} 8 –∫–≤–µ—Å—Ç-–∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ üëæ\n"
                start_time = add_minutes(start_time, 45)
            else:
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ò–≥—Ä–∞ –Ω–∞ –∞—Ä–µ–Ω–µ: {game} üëΩ\n"
                start_time = add_minutes(start_time, 45)
            if food == "–ï–¥–∞ –ø–æ—Å–ª–µ –∏–≥—Ä—ã":
                timing_text += f"{start_time} - {add_minutes(start_time, 15)} –ö—É—à–∞–µ–º –≤ –±–∞–Ω–∫–µ—Ç–Ω–æ–º –∑–∞–ª–µ üçï\n"
                start_time = add_minutes(start_time, 15)
            timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å –≤–µ–¥—É—â–∏–º: {lead_program} üí•\n"
            start_time = add_minutes(start_time, 45)
            timing_text += f"{start_time} - {add_minutes(start_time, 20)} {show} ‚ú®\n"
            start_time = add_minutes(start_time, 20)
            timing_text += f"{start_time} - {add_minutes(start_time, 15)} –ö—É—à–∞–µ–º —Ç–æ—Ä—Ç–∏–∫ üéÇ\n"
            start_time = add_minutes(start_time, 15)

        elif timing == "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ë–ó":
            if place == "–ö—Ä–µ–π–∑–∏ –•–∞—É—Å":
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} 8 –∫–≤–µ—Å—Ç-–∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ üëæ\n"
                start_time = add_minutes(start_time, 45)
            else:
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ò–≥—Ä–∞ –Ω–∞ –∞—Ä–µ–Ω–µ: {game} üëΩ\n"
                start_time = add_minutes(start_time, 45)
            if food == "–ï–¥–∞ –ø–æ—Å–ª–µ –∏–≥—Ä—ã":
                timing_text += f"{start_time} - {add_minutes(start_time, 15)} –ö—É—à–∞–µ–º –≤ –±–∞–Ω–∫–µ—Ç–Ω–æ–º –∑–∞–ª–µ üçï\n"
                start_time = add_minutes(start_time, 15)
            timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å –≤–µ–¥—É—â–∏–º: {lead_program} üí•\n"
            start_time = add_minutes(start_time, 45)
            timing_text += f"{start_time} - {add_minutes(start_time, 20)} –®–æ—É –±–ª–µ—Å–∫-–¥–∏—Å–∫–æ üéä\n"
            start_time = add_minutes(start_time, 20)
            timing_text += f"{start_time} - {add_minutes(start_time, 20)} {show} ‚ú®\n"
            start_time = add_minutes(start_time, 20)
            timing_text += f"{start_time} - {add_minutes(start_time, 25)} –ö—É—à–∞–µ–º —Ç–æ—Ä—Ç–∏–∫ üéÇ\n"
            start_time = add_minutes(start_time, 25)

        elif timing == "–ú–µ–≥–∞ –ë–ó":
            timing_text += f"{start_time} - {add_minutes(start_time, 45)} 8 –∫–≤–µ—Å—Ç-–∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ üëæ\n"
            start_time = add_minutes(start_time, 45)
            timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ò–≥—Ä–∞ –Ω–∞ –∞—Ä–µ–Ω–µ: {game} üëΩ\n"
            start_time = add_minutes(start_time, 45)
            if food == "–ï–¥–∞ –ø–æ—Å–ª–µ –∏–≥—Ä—ã":
                timing_text += f"{start_time} - {add_minutes(start_time, 15)} –ö—É—à–∞–µ–º –≤ –±–∞–Ω–∫–µ—Ç–Ω–æ–º –∑–∞–ª–µ üçï\n"
                start_time = add_minutes(start_time, 15)
            timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å –≤–µ–¥—É—â–∏–º: {lead_program} üí•\n"
            start_time = add_minutes(start_time, 45)
            timing_text += f"{start_time} - {add_minutes(start_time, 20)} –®–æ—É –±–ª–µ—Å–∫-–¥–∏—Å–∫–æ üéä\n"
            start_time = add_minutes(start_time, 20)
            timing_text += f"{start_time} - {add_minutes(start_time, 20)} {show} ‚ú®\n"
            start_time = add_minutes(start_time, 20)
            timing_text += f"{start_time} - {add_minutes(start_time, 25)} –ö—É—à–∞–µ–º —Ç–æ—Ä—Ç–∏–∫ üéÇ\n"
            start_time = add_minutes(start_time, 25)

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –ú–∞–ª–æ–≥–æ –ó–∞–ª–∞
    elif hall == "–ú–∞–ª—ã–π –∑–∞–ª":
        if timing == "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ú–ó":
            if place == "–ö—Ä–µ–π–∑–∏ –•–∞—É—Å":
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} 8 –∫–≤–µ—Å—Ç-–∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ üëæ\n"
                start_time = add_minutes(start_time, 45)
            else:
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ò–≥—Ä–∞ –Ω–∞ –∞—Ä–µ–Ω–µ: {game} üëΩ\n"
                start_time = add_minutes(start_time, 45)
            if food == "–ï–¥–∞ –ø–æ—Å–ª–µ –∏–≥—Ä—ã":
                timing_text += f"{start_time} - {add_minutes(start_time, 15)} –ö—É—à–∞–µ–º –≤ –±–∞–Ω–∫–µ—Ç–Ω–æ–º –∑–∞–ª–µ üçï\n"
                start_time = add_minutes(start_time, 15)
            timing_text += f"{start_time} - {add_minutes(start_time, 30)} {show} ‚ú®\n"
            start_time = add_minutes(start_time, 30)
            timing_text += f"{start_time} - {add_minutes(start_time, 20)} –ö—É—à–∞–µ–º —Ç–æ—Ä—Ç–∏–∫ üéÇ\n"
            start_time = add_minutes(start_time, 20)

        elif timing == "–°—Ç–∞–Ω–¥–∞—Ä—Ç –ú–ó":
            if place == "–ö—Ä–µ–π–∑–∏ –•–∞—É—Å":
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} 8 –∫–≤–µ—Å—Ç-–∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ üëæ\n"
                start_time = add_minutes(start_time, 45)
            else:
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ò–≥—Ä–∞ –Ω–∞ –∞—Ä–µ–Ω–µ: {game} üëΩ\n"
                start_time = add_minutes(start_time, 45)
            if food == "–ï–¥–∞ –ø–æ—Å–ª–µ –∏–≥—Ä—ã":
                timing_text += f"{start_time} - {add_minutes(start_time, 15)} –ö—É—à–∞–µ–º –≤ –±–∞–Ω–∫–µ—Ç–Ω–æ–º –∑–∞–ª–µ üçï\n"
                start_time = add_minutes(start_time, 15)
            timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å –≤–µ–¥—É—â–∏–º: {lead_program} üí•\n"
            start_time = add_minutes(start_time, 45)
            timing_text += f"{start_time} - {add_minutes(start_time, 20)} –ö—É—à–∞–µ–º —Ç–æ—Ä—Ç–∏–∫ üéÇ\n"
            start_time = add_minutes(start_time, 20)

        elif timing == "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ú–ó":
            if place == "–ö—Ä–µ–π–∑–∏ –•–∞—É—Å":
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} 8 –∫–≤–µ—Å—Ç-–∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ üëæ\n"
                start_time = add_minutes(start_time, 45)
            else:
                timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ò–≥—Ä–∞ –Ω–∞ –∞—Ä–µ–Ω–µ: {game} üëΩ\n"
                start_time = add_minutes(start_time, 45)
            if food == "–ï–¥–∞ –ø–æ—Å–ª–µ –∏–≥—Ä—ã":
                timing_text += f"{start_time} - {add_minutes(start_time, 15)} –ö—É—à–∞–µ–º –≤ –±–∞–Ω–∫–µ—Ç–Ω–æ–º –∑–∞–ª–µ üçï\n"
                start_time = add_minutes(start_time, 15)
            timing_text += f"{start_time} - {add_minutes(start_time, 45)} –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å –≤–µ–¥—É—â–∏–º: {lead_program} üí•\n"
            start_time = add_minutes(start_time, 45)
            timing_text += f"{start_time} - {add_minutes(start_time, 20)} {show} ‚ú®\n"  # –î–æ–±–∞–≤–ª–µ–Ω –≤—ã–≤–æ–¥ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞ –∏–ª–∏ —à–æ—É
            start_time = add_minutes(start_time, 20)
            timing_text += f"{start_time} - {add_minutes(start_time, 15)} –ö—É—à–∞–µ–º —Ç–æ—Ä—Ç–∏–∫ üéÇ\n"
            start_time = add_minutes(start_time, 15)

    timing_text += f"{start_time} - {add_minutes(start_time, 10)} –í—Ä–µ–º—è –Ω–∞ —Å–±–æ—Ä—ã üéí\n\n"
    end_time = add_minutes(start_time, 10)
    timing_text += f"–î–æ–º–æ–π –≤ {end_time} ü•≥\n\n"
    timing_text += f"–í—Å–µ–º —Å —Å–æ–±–æ–π —Å–º–µ–Ω–Ω—É—é –æ–±—É–≤—å –∏ —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. –ñ–¥–µ–º –≤–∞—Å –ø–æ –∞–¥—Ä–µ—Å—É –õ–µ–Ω–∏–Ω–∞ 130/1 –≤—Ö–æ–¥ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –õ–µ–Ω–∏–Ω–∞ —ç—Ç–∞–∂ {3 if place == '–ö—Ä–µ–π–∑–∏ –•–∞—É—Å' else 4} üéâüéâüéâ"

    return timing_text


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∞–π–º–∏–Ω–≥")
    markup.add(item)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∞–π–º–∏–Ω–≥' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.", reply_markup=markup)


def go_back(message):
    start(message)


@bot.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥")
def back_button(message):
    go_back(message)


@bot.message_handler(func=lambda message: message.text == "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∞–π–º–∏–Ω–≥")
def start_timing_creation(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ö—Ä–µ–π–∑–∏ –•–∞—É—Å")
    item2 = types.KeyboardButton("–ö–æ—Å–º–æ–±–∞–∑–∞")
    markup.add(item1, item2)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text in ["–ö—Ä–µ–π–∑–∏ –•–∞—É—Å", "–ö–æ—Å–º–æ–±–∞–∑–∞"])
def choose_hall(message):
    user_data[message.chat.id] = {"place": message.text}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ë–æ–ª—å—à–æ–π –∑–∞–ª")
    item2 = types.KeyboardButton("–ú–∞–ª—ã–π –∑–∞–ª")
    markup.add(item1, item2)
    markup.add(types.KeyboardButton("–ù–∞–∑–∞–¥"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ª:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text in ["–ë–æ–ª—å—à–æ–π –∑–∞–ª", "–ú–∞–ª—ã–π –∑–∞–ª"])
def choose_timing(message):
    user_data[message.chat.id]["hall"] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if message.text == "–ë–æ–ª—å—à–æ–π –∑–∞–ª":
        item1 = types.KeyboardButton("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ë–ó")
        item2 = types.KeyboardButton("–°—Ç–∞–Ω–¥–∞—Ä—Ç –ë–ó")
        item3 = types.KeyboardButton("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ë–ó")
        item4 = types.KeyboardButton("–ú–µ–≥–∞ –ë–ó")
        markup.add(item1, item2, item3, item4)
    else:
        item1 = types.KeyboardButton("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ú–ó")
        item2 = types.KeyboardButton("–°—Ç–∞–Ω–¥–∞—Ä—Ç –ú–ó")
        item3 = types.KeyboardButton("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ú–ó")
        markup.add(item1, item2, item3)
    markup.add(types.KeyboardButton("–ù–∞–∑–∞–¥"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç:", reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ["–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ë–ó", "–°—Ç–∞–Ω–¥–∞—Ä—Ç –ë–ó", "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ë–ó", "–ú–µ–≥–∞ –ë–ó",
                                          "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ú–ó", "–°—Ç–∞–Ω–¥–∞—Ä—Ç –ú–ó", "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ú–ó"])
def choose_food_or_game(message):
    user_data[message.chat.id]["timing"] = message.text
    if user_data[message.chat.id]["place"] == "–ö–æ—Å–º–æ–±–∞–∑–∞" or user_data[message.chat.id]["timing"] == "–ú–µ–≥–∞ –ë–ó":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–õ–∞–∑–µ—Ä—Ç–∞–≥")
        item2 = types.KeyboardButton("–ê–º–æ–Ω–≥ –ê—Å")
        item3 = types.KeyboardButton("–ü—Ä—è—Ç–∫–∏ –≤ —Ç–µ–º–Ω–æ—Ç–µ")
        markup.add(item1, item2, item3)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –Ω–∞ –∞—Ä–µ–Ω–µ:", reply_markup=markup)
        bot.register_next_step_handler(message, set_game)
    else:
        choose_food(message)


def set_game(message):
    if message.text not in ["–õ–∞–∑–µ—Ä—Ç–∞–≥", "–ê–º–æ–Ω–≥ –ê—Å", "–ü—Ä—è—Ç–∫–∏ –≤ —Ç–µ–º–Ω–æ—Ç–µ"]:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –∏–∑ –º–µ–Ω—é.")
        choose_food_or_game(message)
    else:
        user_data[message.chat.id]["game"] = message.text
        bot.send_message(message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∏–≥—Ä—É: " + message.text)
        choose_food(message)


def choose_food(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ï–¥–∞ –≤ –Ω–∞—á–∞–ª–µ")
    item2 = types.KeyboardButton("–ï–¥–∞ –ø–æ—Å–ª–µ –∏–≥—Ä—ã")
    markup.add(item1, item2)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –µ–¥–∞:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text in ["–ï–¥–∞ –≤ –Ω–∞—á–∞–ª–µ", "–ï–¥–∞ –ø–æ—Å–ª–µ –∏–≥—Ä—ã"])
def set_food(message):
    user_data[message.chat.id]["food"] = message.text
    markup = types.ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –µ–¥—ã
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ 00:00):", reply_markup=markup)


@bot.message_handler(func=lambda message: re.match(r'^\d{2}:\d{2}$', message.text))
def set_time(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏ (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 00:00 - 23:59)
    time_str = message.text
    try:
        time_obj = datetime.datetime.strptime(time_str, "%H:%M")
        user_data[message.chat.id]["time"] = time_str
        if user_data[message.chat.id]["hall"] == "–ë–æ–ª—å—à–æ–π –∑–∞–ª":
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –≤–µ–¥—É—â–∏–º:")
            bot.register_next_step_handler(message, set_program)
        elif user_data[message.chat.id]["hall"] == "–ú–∞–ª—ã–π –∑–∞–ª" and user_data[message.chat.id]["timing"] in [
            "–°—Ç–∞–Ω–¥–∞—Ä—Ç –ú–ó", "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ú–ó"]:
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –≤–µ–¥—É—â–∏–º:")
            bot.register_next_step_handler(message, set_program)
        else:
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –∏–ª–∏ —à–æ—É:")
            bot.register_next_step_handler(message,
                                           set_show)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —Ç–µ–ø–µ—Ä—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ —à–æ—É –∏–ª–∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–µ –¥–ª—è –≤—Å–µ—Ö –∑–∞–ª–æ–≤
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –≤—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")


@bot.message_handler(func=lambda message: not re.match(r'^\d{2}:\d{2}$', message.text))
def invalid_time(message):
    bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –≤—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")


def set_program(message):
    user_data[message.chat.id]["program"] = message.text
    if user_data[message.chat.id]["hall"] == "–ë–æ–ª—å—à–æ–π –∑–∞–ª" and user_data[message.chat.id]["timing"] in ["–°—Ç–∞–Ω–¥–∞—Ä—Ç –ë–ó",
                                                                                                        "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ë–ó",
                                                                                                        "–ú–µ–≥–∞ –ë–ó"]:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –∏–ª–∏ —à–æ—É:")
        bot.register_next_step_handler(message, set_show)
    elif user_data[message.chat.id]["hall"] == "–ú–∞–ª—ã–π –∑–∞–ª" and user_data[message.chat.id][
        "timing"] == "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ú–ó":
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –∏–ª–∏ —à–æ—É:")  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ú–ó
        bot.register_next_step_handler(message, set_show)
    else:
        complete_timing_creation(message)


def set_show(message):
    user_data[message.chat.id]["show"] = message.text
    complete_timing_creation(message)


def complete_timing_creation(message):
    markup = types.ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    timing_result = generate_timing(user_data[message.chat.id])
    bot.send_message(message.chat.id, timing_result, reply_markup=markup)
    show_new_timing_option(message)


def show_new_timing_option(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∞–π–º–∏–Ω–≥")
    markup.add(item)
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∞–π–º–∏–Ω–≥' —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–ª–∞–Ω.", reply_markup=markup)


@bot.message_handler(func=lambda message: True)
def handle_any_text(message):
    bot.send_message(message.chat.id, "–¢—ã –Ω–∞–ø–∏—Å–∞–ª —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ /start")


bot.infinity_polling()
os.system('python main.py')
